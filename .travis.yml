language: csharp

matrix:
  include:
    #Nightly builds for upload. Use lowest possible Mono version for compatibility purposes
    - os: linux
      dist: trusty
      mono: 5.20.1
      script: make publish
    - os: osx
      mono: latest
      script: make publish
    - os: linux
      dist: trusty
      mono: 5.20.1
      script: make debian
      if: tag IS present

    #Further test builds on different Ubuntu / Mono versions and using the SLN file directly
    
    #Note: Only run the single uploading build on MacOS https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing
    #Let's test all variations on Linux. This will (probably) ensure that things go OK
    - os: linux
      dist: trusty
      mono: latest
      solution: OpenBVE.sln
    - os: linux
      dist: xenial
      mono: latest
      solution: OpenBVE.sln
    - os: linux
      dist: trusty
      mono: 5.20.1
      solution: OpenBVE.sln

addons:
  apt:
    packages:
      - sshpass
      - p7zip-full
      - fakeroot
  homebrew:
    taps: leezer3/sshpass
    packages: sshpass
    update: true

after_success:
  #Export SSH password for whichever platform we are building on
  - test $TRAVIS_PULL_REQUEST == "false" && (test $TRAVIS_BRANCH == "master" || test $TRAVIS_TAG) && export SSHPASS=$DEPLOY_PASS
  #Nightly build
  - test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_BRANCH == "master" && test "$TRAVIS_OS_NAME" == "linux" && test -f "linuxbuild.zip" && mv "linuxbuild.zip" "OpenBVE-$(date '+%F').zip"
  - test -f "OpenBVE-$(date '+%F').zip" && ./UploadScript.sh sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P 4500 "OpenBVE-$(date '+%F').zip" $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
  #Release build
  - test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_TAG && test "$TRAVIS_OS_NAME" == "linux" && test -f "linuxbuild.zip" && mv "linuxbuild.zip" "OpenBVE-$TRAVIS_TAG.zip"
  - test -f "OpenBVE-$TRAVIS_TAG.zip" && ./UploadScript.sh sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P 4500 "OpenBVE-$TRAVIS_TAG.zip" $DEPLOY_USER@$DEPLOY_HOST:$RELEASE_PATH
  #Debian package
  - test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_TAG && test "$TRAVIS_OS_NAME" == "linux" && test -f "installers/debian.deb" && mv "installers/debian.deb" "OpenBVE-$TRAVIS_TAG.deb"
  - test -f "OpenBVE-$TRAVIS_TAG.deb" && ./UploadScript.sh sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P 4500 "OpenBVE-$TRAVIS_TAG.deb" $DEPLOY_USER@$DEPLOY_HOST:$RELEASE_PATH
  ##OSX Builds##
  #Nightly build
  - test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_BRANCH == "master" && test "$TRAVIS_OS_NAME" == "osx" && test -f "macbuild.dmg" && mv "macbuild.dmg" "OpenBVE-$(date '+%F').dmg"
  - test -f "OpenBVE-$(date '+%F').dmg" && ./UploadScript.sh sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P 4500 "OpenBVE-$(date '+%F').dmg" $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
  #Release build
  - test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_TAG && test "$TRAVIS_OS_NAME" == "osx" && test -f "macbuild.dmg" && mv "macbuild.dmg" "OpenBVE-$TRAVIS_TAG.dmg"
  - test -f "OpenBVE-$TRAVIS_TAG.dmg" && ./UploadScript.sh sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P 4500 "OpenBVE-$TRAVIS_TAG.dmg" $DEPLOY_USER@$DEPLOY_HOST:$RELEASE_PATH

#Also deploy new releases to Github Releases
deploy:
  provider: releases
  api_key: $GITHUB_RELEASE_OAUTH
  on:
    tags: true
  file:
    #zipped build
    - "OpenBVE-$TRAVIS_TAG.zip"
    #Debian package
    - "OpenBVE-$TRAVIS_TAG.deb"
    #Mac DMG
    - "OpenBVE-$TRAVIS_TAG.dmg"
  skip_cleanup: true

notifications:
  email: false
